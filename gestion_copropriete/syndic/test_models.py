from django.test import TestCase
from syndic.models import User, Copropriete, Parametre, PartiePrivee, Proprietaire, Gestionnaire, Compte, Transaction

class UserTestCase(TestCase):
    def setUp(self):
        user=User.objects.create(username='omar',password='12345678')
        user.save()

    def test_user(self):
        user=User.objects.get(username='omar')
        self.assertEqual(user.password, '12345678')

class CoproprieteTestCase(TestCase):
    def setUp(self):
        user1=User.objects.create(username='omar',password='12345678')
        user1.save()
        user2=User.objects.create(username='chaymae',password='12345678')
        user2.save()
        user3=User.objects.create(username='ahmed',password='12345678')
        user3.save()
        gest1=Gestionnaire.objects.create(responsable=user3, role='president')
        gest1.save()
        gest2=Gestionnaire.objects.create(responsable=user1, role='tresorier')
        gest2.save()
        gest3=Gestionnaire.objects.create(responsable=user2, role='president')
        gest3.save()
        copropriete1=Copropriete.objects.create(copropriete='raison sociale1', adresse='adresse', ville='ville', pays='pays', totalPartsCopropriete=7.0)
        copropriete1.hist_gestionnaires.add(gest1)
        copropriete1.hist_gestionnaires.add(gest2)
        copropriete1.save()
        pp1=PartiePrivee.objects.create(copropriete=copropriete1, identifiant='identifiant1', partDansCopropriete=1.0)
        pp1.save()
        pp2=PartiePrivee.objects.create(copropriete=copropriete1, identifiant='identifiant2', partDansCopropriete=2.0)
        pp2.save()
        pp3=PartiePrivee.objects.create(copropriete=copropriete1, identifiant='identifiant4', partDansCopropriete=4.0)
        pp3.save()
        pr1=Proprietaire.objects.create(proprietaire=user1)
        pr1.save()
        pr2=Proprietaire.objects.create(proprietaire=user2)
        pr2.save()
        pp1.hist_proprietaires.add(pr1)
        pp1.save()
        pp2.hist_proprietaires.add(pr1)
        pp2.save()
        pp3.hist_proprietaires.add(pr2)
        pp3.save()
        cpt1=Compte.objects.create(copropriete=copropriete1, type_compte='bilan-actif', libelle_compte='caisse')
        cpt1.save()
        cpt2=Compte.objects.create(copropriete=copropriete1, type_compte='bilan-passif', libelle_compte='solde initial')
        cpt2.save()
        cpt3=Compte.objects.create(copropriete=copropriete1, type_compte='bilan-actif', libelle_compte='banque')
        cpt3.save()
        trans1=Transaction.objects.create(creePar=user1,copropriete=copropriete1,operation='test',compte_debit=cpt1,compte_credit=cpt2, montant=1000.00)
        trans2=Transaction.objects.create(creePar=user2,copropriete=copropriete1,operation='test',compte_debit=cpt3,compte_credit=cpt2, montant=500.00)
        trans1.save()
        trans2.save()
        copropriete2=Copropriete.objects.create(copropriete='raison sociale2', adresse='adresse', ville='ville', pays='pays', totalPartsCopropriete=8.0)
        copropriete2.hist_gestionnaires.add(gest2)
        copropriete2.hist_gestionnaires.add(gest3)
        copropriete2.save()
        pp1=PartiePrivee.objects.create(copropriete=copropriete2, identifiant='identifiant1', partDansCopropriete=1.0)
        pp1.save()
        pp2=PartiePrivee.objects.create(copropriete=copropriete2, identifiant='identifiant2', partDansCopropriete=3.0)
        pp2.save()
        pp3=PartiePrivee.objects.create(copropriete=copropriete2, identifiant='identifiant4', partDansCopropriete=4.0)
        pp3.save()
        pr1=Proprietaire.objects.create(proprietaire=user2)
        pr1.save()
        pr2=Proprietaire.objects.create(proprietaire=user3)
        pr2.save()
        pp1.hist_proprietaires.add(pr1)
        pp1.save()
        pp2.hist_proprietaires.add(pr1)
        pp2.save()
        pp3.hist_proprietaires.add(pr2)
        pp3.save()
        coproParam1=Parametre(modifieePar=user1,copropriete=copropriete1,cotisationMensuelle=2400,exerciceOuvert=2020)
        coproParam1.save()
        coproParam2=Parametre(modifieePar=user2,copropriete=copropriete2,cotisationMensuelle=5000,exerciceOuvert=2019)
        coproParam2.save()
        cpt1=Compte.objects.create(copropriete=copropriete2, type_compte='bilan-actif', libelle_compte='caisse')
        cpt1.save()
        cpt2=Compte.objects.create(copropriete=copropriete2, type_compte='bilan-passif', libelle_compte='solde initial')
        cpt2.save()
        cpt3=Compte.objects.create(copropriete=copropriete2, type_compte='bilan-actif', libelle_compte='banque')
        cpt3.save()
        trans1=Transaction.objects.create(creePar=user1,copropriete=copropriete2,operation='test',compte_debit=cpt1,compte_credit=cpt2, montant=2000.00)
        trans2=Transaction.objects.create(creePar=user2,copropriete=copropriete2,operation='test',compte_debit=cpt3,compte_credit=cpt2, montant=1500.00)
        trans1.save()
        trans2.save()
    def test_copropriete(self):
        copropriete1=Copropriete.objects.get(copropriete='raison sociale1')
        self.assertEqual(copropriete1.ville,'ville')
        self.assertEqual(copropriete1.totalPartsCopropriete, 7.0)
        self.assertEqual(copropriete1.totalPartsExact(),True)
        self.assertEqual(len(copropriete1.getCoproprietairesActuels()),2)
        self.assertEqual(len(copropriete1.getGestionairesActuels()),2)
        self.assertEqual(len(copropriete1.getSituationFinanciere(2020)),3)
        self.assertEqual(sum([copropriete1.getSituationFinanciere(2020)[x] for x in copropriete1.getSituationFinanciere(2020)]),0.00)
        self.assertEqual(copropriete1.transactions.all()[0].transactionValide(),True)

        copropriete2=Copropriete.objects.get(copropriete='raison sociale2')
        coproParam2=copropriete2.parametres
        self.assertEqual(copropriete2.ville,'ville')
        self.assertEqual(copropriete2.totalPartsCopropriete, 8.0)
        self.assertEqual(copropriete2.totalPartsExact(),True)
        self.assertEqual(len(copropriete2.getCoproprietairesActuels()),2)
        self.assertEqual(len(copropriete2.getGestionairesActuels()),2)
        self.assertEqual(coproParam2.copropriete.ville,'ville')
        self.assertEqual(copropriete2.parametres.exerciceOuvert,2019)
        self.assertEqual(copropriete2.transactions.all()[0].transactionValide(),True)
        
        

class PartiePriveeTestCase(TestCase):
    def setUp(self):
        user1=User.objects.create(username='omar',password='12345678')
        user1.save()
        user2=User.objects.create(username='chaymae',password='12345678')
        user2.save()
        copropriete=Copropriete.objects.create(copropriete='raison sociale', adresse='adresse', ville='ville', pays='pays', totalPartsCopropriete=7.0)
        copropriete.save()
        pp=PartiePrivee.objects.create(copropriete=copropriete, identifiant='identifiant1', partDansCopropriete=1.0)
        pp.save()
        pr1=Proprietaire.objects.create(proprietaire=user1)
        pr1.save()
        pr2=Proprietaire.objects.create(proprietaire=user2)
        pr2.save()
        pp.hist_proprietaires.add(pr1)
        pp.hist_proprietaires.add(pr2)
        pp.save()

    def test_pp(self):
        copropriete=Copropriete.objects.get(copropriete='raison sociale')
        pp=PartiePrivee.objects.get(identifiant='identifiant1', copropriete=copropriete)
        self.assertEqual(pp.partDansCopropriete,1.0)
        self.assertEqual(len(pp.getProprietairesActuels()),2)
        self.assertEqual(pp.getProprietairesActuels()[1].proprietaire.username,'chaymae')